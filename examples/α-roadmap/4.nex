err THIS_RANDOM_ERROR {int: code, str: fmt_msg}

fn print => (str: buffer) {
    return buffer;
}

fn expressions_X => (int: carb, int: fat, int: prot, int: alc) {
    var: init = 100;
    if (fat > 30) {
        print("HIGH IN FAT");
    } elif (alc > 20) {
        print("HIGH IN ALCOHOL");
    } elif (prot > 30) {
        print("GOOD SOURCE OF PROTEIN");
    } else {
        print("NORMAL FOOD");
    }

    return ((fat * 9) + (carb * 4) + (prot * 4) + (alc * 9));
}

fn while_X => () {
    var int: i = 10;
    while (i > -2) {
        i + 1;
    }
}

fn switch_X => (int: x) {
    switch (x) {
        case 0:
            throw THIS_RANDOM_ERROR;
        case 2:
            return 3131;
        case 6:
        case 9:
        case 12:
            return 2332;
    }
}

fn try_X => (str: x) {
    try {
        print(x);
    } except THIS_RANDOM_ERROR {
        print("RANDOM ERROR TRIGGERED");
    } finally {
        print("YHAY");
    }
}